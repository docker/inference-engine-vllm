name: Build vLLM
run-name: Build vLLM

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      release:
        description: 'Publish artifacts produced by this job'
        required: false
        type: boolean
        default: false
      pushLatest:
        description: 'Tag artifacts produced by this job as latest-*'
        required: false
        type: boolean
        default: false
      releaseTag:
        description: 'Release tag'
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: native_linux_cpu
            dockerfile: generic.Dockerfile
            context: .
            build_args: |
              BASE_IMAGE=ubuntu:24.04
            output_dir: out-cpu
          
          - name: native_linux_cuda
            dockerfile: cuda.Dockerfile
            context: .
            build_args: |
              CUDA_VERSION=12.9.0
              CUDA_IMAGE_VARIANT=ubuntu24.04
            output_dir: out-cuda
    
    name: Build ${{ matrix.name }}
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v5
      with:
        submodules: 'true'

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERPUBLICBOT_USERNAME }}
        password: ${{ secrets.DOCKERPUBLICBOT_WRITE_PAT }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: "lab:latest"
        driver: cloud
        endpoint: "docker/make-product-smarter"
        install: true

    - name: Build vLLM (${{ matrix.name }})
      uses: docker/build-push-action@v5
      with:
        file: ${{ github.workspace }}/${{ matrix.dockerfile }}
        platforms: linux/amd64, linux/arm64
        context: ${{ github.workspace }}/${{ matrix.context }}
        build-args: ${{ matrix.build_args }}
        push: false
        sbom: true
        provenance: mode=max
        outputs: type=local,dest=${{ github.workspace }}/${{ matrix.output_dir }}
